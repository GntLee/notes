# 配置类:kafka.server.KafkaConfig
#----------------------
# 服务器基础配置
#----------------------
broker.id=0
	* 当前broker的id,在集群中唯一,非负整数
	* 如果没有设置(默认值-1),那么 Kafka会自动生成一个
#----------------------
# 服务器Socket配置
#----------------------
listeners=PLAINTEXT://:9092
	* broker监听客户端连接的地址列表
	* 配置格式:protocol(l)://hostname(l):port(l),protocol(2)://hostname(2):port(2)
	* 支持的协议:
		PLAINTEXT(明文),SSL,SASL_SSL
	* hostname,设置主机名,如果不设置会绑定到默认的网卡,多张网卡情况下,可能会绑定到 127.0.0.1,这样无法对外部提供服务
	* hostname可以设置为 0.0.0.0,表示绑定所有的网卡
		
advertised.listeners=PLAINTEXT://your.host.name:9092
	* 跟上面的配置一样,默认值为 null
	* 主要用于IaaS (Infrastructure as a Service)环境
	* 比如公有云上的机器通常配备有多块网卡,即包含私网网卡和公网网卡
	* 对于这种情况而言,可以设置 advertised.listeners 参数绑定公网 IP 供外部客户端使用
	* 而配置 listeners 参数来绑定私网 IP 地址供 broker 间通信使用

listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600

#----------------------
# 日志配置
#----------------------
log.dirs=/tmp/kafka-logs
	* 数据持久化的目录,如果有多个,可以使用逗号分隔

num.partitions=1
	* 默认topic的partition数量

num.recovery.threads.per.data.dir=1

#----------------------
# 内部的Topic配置
#----------------------
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1

#----------------------
# 日志刷出策略
#----------------------
log.flush.interval.messages=10000
log.flush.interval.ms=1000

#----------------------
# 日志保留策略
#----------------------
log.retention.hours=168
log.retention.bytes=1073741824
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000

#----------------------
# zookeeper配置
#----------------------
zookeeper.connect=localhost:2181
	* 设置连接的地址,如果是多个节点(集群),可以使用逗号分隔
	* 还可以指定kafka使用的目录(路径),如果不指定,则默认使用根路径
		localhost1:2181,localhost2:2181,localhost3:2181/kafka
	* 可以通过设置路径的方法,可以让多个kafka集群使用同一个zk集群,以达到节省硬件资源的目的

zookeeper.connection.timeout.ms=6000

#----------------------
# 组协调器设置
#----------------------
group.initial.rebalance.delay.ms=0

#----------------------
# 其他配置
#----------------------
message.max.bytes
max.request.size
max.message.bytes

auto.create.topics.enable=true
	* 如果消息生产者往不存在的topic发送消息,或者消费者消费了一个不存在的topic时
	* 是否自动创建该不存在的主题
	* 默认 true

default.replication.factor=1
	* 默认patition的副本数量

broker.rack
	* 配置机房所在区
		broker.rack=RACK1
	* 当进行replica排序时候,不会仅仅按照broker顺序进行排序,而是会保证机房错开

delete.topic.enable=true
	* 是否允许删除主题

create.topic.policy.class.name=null
	* 严重主题创建的合法性
	* 参数为:org.apache.kafka.server.policy.CreateTopicPolicy 接口的实现类全路径
		void validate(RequestMetadata requestMetadata) throws PolicyViolationException;
	* 在实现类中,可以获取到创建主题的元数据,如果校验不符合规范,那么可以跑出异常:PolicyViolationException 来组织主题的创建

auto.leader.rebalance.enable=true
	* 是否开启分区自动平衡的功能,默认:true

leader.imbalance.per.broker.percentage
	* broker中的不平衡率,默认 10%

leader.imbalance.check.interval.seconds
	* 优先副本的选举动作周期,默认 300s

follower.replication.throttled.rate
	* 设置Follower副本的复制速速
	* 单位是 byte/s

leader.replication.throttled.rate
	* 设置Leader副本的传输速度
	* 单位是 byte/s

log.index.interval.bytes=4096
	* 默认 4kb

log.segment.bytes=1073741824
	* 一个segment的文件存储消息的最大体积
	* 默认1GB

log.index.size.max.bytes=10485760
	* 默认 10MB

log.cleanup.policy


