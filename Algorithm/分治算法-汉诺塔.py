
# 汉诺塔
	* 汉诺塔是一个移动磁盘的难题, 有3根桩:ABC
	* 目标是把磁盘(可能是多个, 从小到大堆叠)从A移动到C上, 并且保证磁盘在C的顺序跟A一样
	* 移动磁盘有两个条件
		1. 一次只能移动一个磁盘
		2. 不能在小的磁盘上放置大的磁盘


	* 思路: 不管有多少个盘, 都看做俩个



# 分治算法
	* 分而治之, 把复杂的问题分成多个相同的小问题, 在把多个小问题再细分为多个小问题...
	* 最后把所有问题的答案, 合并


# 分治算法可以解决的一些问题
	* 二分搜索
	* 大整数乘法
	* 棋盘覆盖
	* 合并排序
	* 快速排序
	* 线性时间选择
	* 最接近点对问题
	* 循环赛日程表
	* 汉诺塔

# 分治算法的步骤
	1. 分解, 把原来问题分解为若干个规模较小, 相互独立, 于原问题形式相同的子问题
	2. 解决, 子问题比较小, 直接解决, 否则递归解决各个子问题
	3. 合并, 把每个子问题解, 合并为原问题的解



# 代码实现
def hanoitower(number, a, b, c):
    if number == 1:
        print('第[%d]个盘从 [%s] -> [%s]' % (number, a, c))
    else:
        hanoitower(number - 1, a, c, b)
        print('第[%d]个盘从 [%s] -> [%s]' % (number, a, c))
        hanoitower(number - 1, b, a, c)


hanoitower(5, 'a', 'b', 'c')