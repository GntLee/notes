------------------------------------
堆(Heap)							|
------------------------------------
	# 每个线程共享的内存区域, GC主要管理的区域
	# 堆是物理上不连续的内存空间,逻辑上是连续的
	# 一般是固定大小,也可以通过启动参数来修改空间的大小
	# 如果堆没有空间进行扩展会抛出异常:OutOfMemoryError
	
	# 根据内存回收(基本都采用分代收算法)的角度, 看堆内存分区
		* 堆区域
			- 新生代(PSYoungGen)
				* Eden 空间
				* From Survivor 空间
				* To Survivior 空间
			- 老年代(ParOldGen)
			
		
		* 非堆区
			- 元空间(Metaspace/PermGen)
			
			
			

		
	
	# 根据内存分配的角度, 看堆内存分区
		线程私有的分配缓冲区 TLAB(Thread Local Allocation Buffer)

	
	# 不管堆怎么分区, 存放的内容都是对象, 各种分区的目的是为了更快, 更好的回收内存
	
	# 对象的访问定位方式
		* 句柄
			- 堆空间会划分一个句柄池, 句柄存储了对象真正的地址
			- refrence 存储的就是对象句柄的地址
			- 对象修改了地址(垃圾回收时可能会移动对象), 只用修改句柄, 而不用修改 refrence

		* 直接指针(HotSpot默认)
			- refrence 直接存储对象的地址

		


