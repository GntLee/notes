--------------------------
TLAB					  |
--------------------------
	# TLAB (ThreadLocalAllocBuffer)
	
	# 创建对象时,需要在堆上申请指定大小的内存, 如果同时有大量线程申请内存的话, 可以通过锁机制或者指针碰撞的方式确保不会申请到同一块内存
		* 在JVM运行中, 内存分配是一个极其频繁的动作, 这种方式势必会降低性能
	
	# 在Hotspot 1.6的实现中引入了TLAB技术
		* TLAB是线程的一块私有内存, 如果设置了虚拟机参数 -XX:UseTLAB
		* 在线程初始化时, 同时也会申请一块指定大小的内存, 只给当前线程使用, 这样每个线程都单独拥有一个 Buffer
		* 如果需要分配内存, 就在自己的Buffer上分配, 这样就不存在竞争的情况, 可以大大提升分配效率
		* 当Buffer容量不够的时候, 再重新从Eden区域申请一块继续使用
		* 申请动作还是需要原子操作的
	
	# TLAB只是让每个线程有私有的分配指针, 但底下存对象的内存空间还是给所有线程访问的, 只是其它线程无法在这个区域分配而已
		* 当一个TLAB用满就新申请一个TLAB
		* 在老TLAB里的对象还留在原地什么都不用管――它们无法感知自己是否是曾经从TLAB分配出来的, 而只关心自己是在eden里分配的
	


